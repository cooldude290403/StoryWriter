import tkinter as  tk
from tkinter import messagebox
import json

# This function will print the final report when the user clicks genirate
def show_sel():
    # This function is only used in this function only. Its use is to allow the user to copy the story to clipboard to aid in transferring
    def copy_text():
        root.clipboard_clear()
        root.clipboard_append(story_output)
        messagebox.showinfo("Info", "Story has been copied to clipboard")

    selected_services = []
    for service, var in service_vars.items():
#Checks if each box is ticked or not. returns a true or false
        if var.get():
            details = "\n".join(services_data[service]["details"])
            selected_services.append(f"{service}:\n{details}")
    story_output = "Selected Services: \n\n" + "\n\n".join(selected_services)
    window_delete()
    output = tk.Label(root, text=story_output)
    output.pack()
    copy_button = tk.Button(root, text="Copy", command=copy_text)
    copy_button.pack()

    
# This function clears everything in the root window - unsure if this needs to be its own function or if it should just be included in where ever its needed
def window_delete():
    for widget in root.winfo_children():
        widget.destroy()

# This function now reads the sevice names and service details from a single json file
def read_services_from_json(file_path):
    with open(file_path, 'r') as file:
        return json.load(file)
    
# END OF  MULTI USE FUMCTIONS ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    
# This function displays the menu that the user picks make and model from
#def select_make_and_model():
    
# This makes the main window and titles it
root = tk.Tk()
root.title("Service Report Generator")

# Pulls make and model data, makes the variables for the tick boxes and creates the tickboxes themselves
def select_make():
    make_data = read_services_from_json("brands")
    makes = list(make_data.keys())
    make_var = {make: tk.BooleanVar() for make in makes}
    selected_make = tk.StringVar()
    value = 0
    for make in makes:
        tk.Radiobutton(root, text=make, variable=selected_make, value=make).pack()
        value = value + 1

    # Create the forward button and pack it on the right side
    forward_button = tk.Button(root, text="Next", command=lambda: process_selection(selected_make.get(), "select_model"))
    forward_button.pack(side=tk.RIGHT)

    # Create the back button and pack it on the left side
    back_button = tk.Button(root, text="Back")
    back_button.pack(side=tk.LEFT)

    # Now assign the command to the back button
    back_button.config(command=back_button.config(state=tk.DISABLED))

def process_selection(select, next_step):
    if next_step == "select_model":
        select_model(select)
    

def select_model(make):
    print("working as intened. I will show the selected model " + make)


# Pulls service data, makes the variables for the tick boxes and creates the tickboxes themselves
def select_service():
    services_data = read_services_from_json("services")
    services = list(services_data.keys())
    service_vars = {service: tk.BooleanVar() for service in services}
    for service in services:
        tk.Checkbutton(root, text=service, variable=service_vars[service]).pack()

make = select_make()


#Generates the final report - commented out as this should be incorperated into the final select services screen
#submit_button = tk.Button(root, text="Generate Report", command=show_sel)
#submit_button.pack()
root.mainloop()